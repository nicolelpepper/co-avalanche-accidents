---
title: "A Look At Elevated Risk Factors for Avalanche Accidents in Colorado"
subtitle: "Uncovering the Role of Season and Elevation for Avalanche Risk in R"
description: "UCSB MEDS - EDS 222 - Stats for Environmental Data Science"
author: Nicole Pepper
format: 
  html:
    toc: true
execute: 
  eval: true
  warning: false
  message: false
editor_options: 
  code-fold: true
  chunk_output_type: console
output: html_document
---

There is something wondrous about getting yourself up a snowy mountain, beit by the power of a snowmobile or skis underfoot - surrounded by nothing but peaks, trees, and your trusty companions beside. Winter recreation can be really fun, exciting, and uniquely challenging. With advancements in touring and navigating equipment (and cool photos on social media), it's no surprise that backcountry winter adventures are more popular than ever.

![ ](images/backcountry.jpg)

As an avid snowboarder, I enjoy exploring the backcountry on skis or by snowmobile. It wasn't until I moved from California to a mountain town in Northern Colorado, just over 6 years ago, that I fully realized the significant risks that avalanches play in the mountains. Colorado is the most dangerous state for avalanche risk, leading the U.S. in avalanche accidents year to year. Its steep, rugged terrain and cold temperatures, mixed with low-moisture snowstorms creates conditions that make "the perfect storm" for avalanche conditions. These conditions make it harder for snowpack to consolidate, leaving unstable slabs of new snow, sitting on top of weak, faceted older layers, just waiting for a slight trigger to set them in motion. There are a lot of factors that influence avalanche risk, so I wanted to investigate that with my project.

Colorado is fortunate to have the [Colorado Avalanche Information Center(CAIC)](https://avalanche.state.co.us/), which is an organization that provides avalanche education, research, and daily forecasting for the public. They have a robust avalanche reporting and forecasting system. Below is a feature of their interactive dashboard that provides daily avalanche risk forecasting. 
![ ](images/CAIC.jpg)
[Check out the CAIC website](https://avalanche.state.co.us/)

This is where I got the [avalanche report data](https://avalanche.state.co.us/accidents/statistics-and-reporting) for my project. Their readily available dataset has only a subset of information that CAIC collects for their avalanche reports and only contains fatal accidents, excluding avalanche accidents where a human was involved (but no fatality occurred). This limited the type of question that I could ask for this assignment, given the timeline.

I know that CAIC has a danger scale that ranges from low to extreme and they actually, and they designate different risk levels for three elevation bands: below ( < 11,000ft), near (11,000 - 12,000 ft), and above (12,000ft + ). This is because various environmental factors (like temperature, wind, precipitation) influence how snow consolidates at these levels. Knowing that elevation plays an important role in how CAIC designates and communicates avalanche risk, I designed my research question around how elevation impacts the risk of an avalanche accident.

*The model formation that I ended up landing on was:*

##### *Avalanche Accidents ~ Month + Elevation Band + Month : Elevation Band*

Variations in temperature and precipitation patterns play an important role in how snowpack consolidates across different elevation bands. To capture these variations, I include "elevation band" (below, near, and above treeline) and "month" predictor variables. Month is being treated as a proxy for environmental variations that could impact avalanche likelihood, since month is a variable available in the CAIC dataset, this was a practical, though indirect, way for me to consider those variables for this project. Additionally, I incorporated an interaction term between month and elevation. My reasoning behind this is that the effect of elevation on avalanche might vary by the time of the year. My intuition about the relationship between elevation, month, and avalanche is as follows:

- Below Treeline: I expect to see more avalanche accidents overall compared to other elevation bands, with relatively little variation across months
- Above Treeline: I anticipate fewer avalanche accidents overall, but significant variability across months
- Near Treeline: I predict it would fall somewhere in between, with moderate avalanche accidents and seasonal variation

I made an attempt to visualize this hypothesis in the figure below:

![ ](images/project_intuition.jpg)
For this analysis the `Null Hypothesis (Hâ‚€)` is that there is no interaction between elevation zones and months in determining avalanche fatality rates and the `Alternative Hypothesis` is that Avalanche fatality rates differ by elevation zone and month.

So without further ado, let's jump into my beginner's `R` analysis exploring the impact of elevation and season and elevation on season, on avalanche risk in Colorado.

## 1. Set Up Workspace

To get started, I need to set up my workspace. In the code chunk below, I load in the packages that will be necessary for my analysis. 
```{r}
# ---- Load required packages ----

library(here) # for file management
library(tidyverse) # for data wrangling
library(ggplot2) # for plotting
library(knitr) #
library(kableExtra) # for creating tables
library(DT) # for creating df tables
library(terra) # for working with vector spatial data
library(sf) # for working with vector spatial data
library(elevatr) # for extracting elevation at points

```

## 2. Read in Project Data
Next up, I read in CAIC's avalanche accident data, filtered for the state of Colorado. The data is made up of 271 avalanche observations from 1951 - 2023. A table of the project data is below.
```{r}
# ---- Read in data ----
av_accidents <- read_csv(here::here("data","avalanche_accidents.csv")) %>%
  filter(State == "CO") # Filter for Colorado (CO) in State Column

# Create table for CO avalanche data
datatable(av_accidents, options = list(pageLength = 3))
```

## 3. Prepare Data

Before I can extract elevation values for the accident locations, I need to convert the `av_accidents` data to a spatial object. In the next code chunk, I clean `lat` and `lon` columns by removing 'NA' and obscure values including values '0' and '#REF!', then I convert the data frame to a spatial object using the `sf` packages `st_as_sf` tool. 

#### Convert av_accidents to a Spatial Object
```{r}
# ---- Clean av_accidents data ----

# Clean lat and lon columns by removing NAs, 0, and #REF values
av_accidents <- av_accidents %>% 
    drop_na(lat, lon) %>% # Drop NAs in lat and lon columns
    mutate(across(c(lat, lon), as.character)) %>%  # Ensure columns are characters for filtering
    filter(lat != "0", lon != "0", lat != "#REF!", lon != "#REF!") %>% # Remove values that equal 0 or #REF!
    mutate(across(c(lat, lon), as.numeric))  # Convert back to numeric

# Convert avalanche accidents to spatial object to extract elevation at geometry
av_points <- sf::st_as_sf(av_accidents, coords = c("lon", "lat"), crs = 4326) # Use 4326 to match Elevatr data crs
```

#### Extract & Prepare Elevation at Accident Locations

To get the elevation at accident locations I use the `get_elev_point` tool from the  [`elevatr`](https://cran.r-project.org/web/packages/elevatr/index.html) package. This tool accesses USGS elevation from the Amazon Warehouse Service API to extract elevation at points without having to download a whole raster.

```{r}
# ---- Extract elevation at avalanche accident locations ----

# Call in elevation data using `elevatr`
av_points <- get_elev_point(locations = av_points,
                            prj = sf::st_crs(4326)$proj4string)

# Convert the result back to a data frame by replacing av_accidents
av_accidents <- as.data.frame(av_points)

# ---- Clean and remove unwanted elevation values ---- 

av_accidents <- av_accidents %>% 
    filter(elevation != 0, elevation != -10000) 

# ---- Add a column for elevation band  ---- 

# Define and add a column for elevation groups
av_accidents <- av_accidents %>%
  mutate(elevation_group = case_when(
    elevation < 3352.8 ~ "Below Treeline",
    elevation >= 3352.8 & elevation <= 3652 ~ "Near Treeline",
    elevation > 3652 ~ "Above Treeline"
  ))

```

### Take a Look at Accidents by Elevation
```{r}
#| code-fold: true

# ---- Plot accidents by elevation group ----

ggplot(data = av_accidents) + 
  geom_histogram(aes(x = elevation),
                fill = "#4ECBDE",
                alpha = 0.8) +
geom_vline(xintercept = c(3352.8, 3652), color = "firebrick", size = 0.75, linetype = "solid") +
  theme_minimal() +
  theme(plot.title = element_text(face = "bold", size = 16),
       axis.title.x = element_text(angle = 0,
                                   vjust = 0.5,
                                   face = "bold"),
       axis.title.y = element_text(angle = 0,
                                   vjust = 0.5,
                                   face = "bold")) +
  labs(title = "Avalanches Accidents by Elevation Zone in Colorado",
       x = "Elevation (Meters)",
       y = "Avalanche\nAccidents") +
  geom_text(aes(x = 3100, y = .5), 
           label = "Below Treeline", size = 4, fontface = "italic") +
  geom_text(aes(x = 3500, y = .5), 
           label = "Near Treeline", size = 4, fontface = "italic") +
  geom_text(aes(x = 3850, y = .5), 
           label = "Above Treeline", size = 4, fontface = "italic")
```

#### Prepare the Month Data for Avalanche Accidents

Next, I want to prepare the month data for my model. I'd like to start by creating a preliminary graph to see the distribution of avalanche accidents by month. Before I can do that, I want to create a month names column and assign their respective names. To do this, I define vector lists for `month_labels` (for their names) and `month_levels` to reorder them sequentially for the winter season. Then I create a new column in the `av_accidents` dataset as an ordered factor; I set the labels equal to `month_labels`, the levels as `month_levels`, and the ordered parameter to `TRUE`.
```{r}
#| code-fold: true

# ---- Prepare month column for preliminary plots ----

# Define month labels and order
month_levels <- c(9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8)
month_labels <- c("September", "October", "November", "December", 
                  "January", "February", "March", "April", 
                  "May", "June", "July", "August")

av_accidents$month_names <- factor(av_accidents$MM, 
                                        levels = month_levels, 
                                        labels = month_labels, 
                                        ordered = TRUE)

```

## 4. Visualize Preliminary Data

Now it's time to visualize avalanche accidents by month in Colorado.  
```{r}
#| code-fold: true

# ---- Plot accidents by month sorted by season order ----
ggplot(data = av_accidents) + 
  geom_bar(aes(x = month_names),
                fill = "#4ECBDE",
                alpha = 0.8)  +
  theme_minimal() +
  theme(plot.title = element_text(face = "bold",size = 16),
        axis.text.x = element_text(angle = 0,
                                   hjust = 0.5,
                                   face = "bold"),
        axis.title.y = element_text(angle = 0,
                                    vjust = 0.5,
                                    face = "bold"),
        axis.title.x = element_text(angle = 0,
                                    face = "bold")) +
  geom_text(
    aes(x = factor(month_names), label = ..count..),
    stat = "count",                        
    vjust = -0.5,
    color = "firebrick",
    fontface = "bold"
  ) +
  labs(title = "Avalanche Accidents in Colorado by Month",
       x = "Month",
       y = "Fatal\nAccidents")
```
This plot above is a bar chart with `month_names` on the x-axis and the count of fatal accidents on the y-axis for Colorado from 1950 - 2023. Based on the plot, it looks like there are fewer fatal avalanches in November and May than in the middle winter months, like February and March. This data shows that March has observed the most avalanche accidents, with a total of 35 fatal accidents.

Looking at the distribution of accidents across months, it is more of a curved than a linear relationship between month and fatal accidents. Considering that I'm going to be performing a generalized linear model (glm), it would be beneficial to transform my data in a way that will fit be more linearlly. Since March is the month with the highest number of accidents, I'm going to create a new column for my dataset based off of the months 'distance' (months) to March.

In the code chunk below, I create a key to assign a new month column `MM_to_March` based on their closest distance (months) to March.
```{r}

# ---- Prepare the MM_to_March column for glm ----

month_distance_to_march <- c(
  "1" = 2, "2" = 1, "3" = 0,
  "4" = 1, "5" = 2, "6" = 3,
  "7" = 4, "8" = 5, "9" = 5,
  "10" = 4, "11" = 4, "12" = 3
)

# Apply the MM column to distances relative to March
av_accidents$MM_to_March <- as.numeric(month_distance_to_march[as.character(av_accidents$MM)])

```

# ---- Randomization test for month ----

# Fit a logistic model:

## *How does month and elevation and the relationship between month and elevation affect the probability of a fatal avalanche accident?*


### Avalanche accidents \~ elevation + season + elevation:season
```{r}
# Practice

# Aggregate data by Month and elevation group
av_accidents_agg <- av_accidents %>%
  group_by(MM_to_March, elevation_group) %>%
  summarise(accidents = n(), .groups = "drop")


# Fit the avalanche accident model
av_accident_glm <- glm(accidents ~ elevation_group + MM_to_March + elevation_group:MM_to_March, 
             family = poisson(link = "log"), 
             data = av_accidents_agg)


summary(av_accident_glm)
```


**Poisson(link = "log")**: is the standard family for modeling count data, which assumes that the response variable follows a Poisson distribution with a mean that is a function of the predictors. The `log` link is commonly used because it ensures the predicted count remains positive.

Residuals after 4000 m are very negative, likely because not as many people recreate above that elevation.


Examine the p-values for elevation, season, & elevation:season

# Visualize model results

```{r}
# Plot the predicted avalanche accidents by elevation and season

```

Optional: CAIC wants to focus their efforts on avalanche risk education and outreach. Which elevation/zone months should they focus on incidents of on 20% fatalities...

